#!/bin/bash

start() {
clear
echo -e "\e[92mWP-UPDATE by ordigital.pl"
echo -e "\e[94m-------------------------------------------"
echo "1. Update to latest Wordpress version"
echo "2. Create SQL query to update Worpress URL"
echo "3. Generate new salt key"
echo "4. Generate .htaccess and .htpasswd for wp-admin"
echo "X. Quit"
echo ""
read -p "Select action: " action 

clear
case "$action" in
"1") update_wp ;;
"2") update_sql ;;
"3") generate_salt ;;
"4") gen_htpasswd ;;
"X") exit ;;
"x") exit ;;
*) start
esac
finished
start
}

update_wp() {
echo -e "\e[92mUpdating to latest Wordpress version"
echo -e "\e[94m-------------------------------------------"
echo 'Downloading latest Wordpress…'
wget -q --show-progress http://wordpress.org/latest.zip
echo 'Unpacking files…'
unzip -q ./latest.zip
echo 'Updating files…'
cp -R ./wordpress/* ./
echo 'Cleaning up…'
rm -rf ./wordpress ./latest.zip
echo 'Done.' 
}

update_sql() {
echo -e "\e[92mCreate SQL query to update Wordpress URL"
echo -e "\e[94m-------------------------------------------"
read -p "Old website address: " -e -i "localhost/" oldaddress
read -p "New website address: " newaddress
echo ""
echo -e "\e[92mSQL query:"
echo -e "\e[94m--------------------------------------"
echo -e "\e[37mUPDATE wp_options SET option_value = replace(option_value, '$oldaddress', '$newaddress') WHERE option_name = 'home' OR option_name = 'siteurl';"
echo "UPDATE wp_posts SET guid = replace(guid, '$oldaddress','$newaddress');"
echo "UPDATE wp_posts SET post_content = replace(post_content, '$oldaddress', '$newaddress');"
echo "UPDATE wp_postmeta SET meta_value = replace(meta_value,'$oldaddress','$newaddress');" 
}

generate_salt() {
echo -e "\e[92mCreate SQL query to update Wordpress URL"
echo -e "\e[94m-------------------------------------------"
salt="$(curl -s https://api.wordpress.org/secret-key/1.1/salt/)"
echo -e "\e[37m$salt"
}

gen_htpasswd() {
echo -e "\e[92mCreate .htpasswd for wp-admin"
echo -e "\e[94m-------------------------------------------"
read -p "User: " user
read -p "Password: " pass
read -p "Local path to Wordpress: " wpadmin
echo "$(htpasswd -nbB $user $pass)" > wp-admin/.htpasswd
echo "AuthType Basic
AuthName \"Login\"
AuthUserFile $wpadmin/wp-admin/.htpasswd
Require valid-user" > wp-admin/.htaccess
}

finished() {
echo ""
echo -e "\e[94mPress any key to quit."
read -n 1 -s -r
echo -e "\e[97m" 
}

start
