#!/bin/bash

start() {
clear
echo -e "\e[92mWP-UPDATE by ordigital.pl"
echo -e "\e[94m-------------------------------------------"
echo "0. Fix file permissions"
echo "1. Update to latest Wordpress version"
echo "2. Create SQL query to update Worpress URL"
echo "3. Update Wordpress URL in SQLite database"
echo "4. Generate new salt key"
echo "5. Generate .htaccess and .htpasswd for wp-admin"
echo "6. Remove invalid HTML tags (W3C compliance)"
echo "7. Download SQLite plugin to wp-content"
echo "8. Set wp-config.php to use SQLite"
echo "X. Quit"
echo ""
read -p "Select action: " action

clear
case "$action" in
"0") fix_perm ;;
"1") update_wp ;;
"2") update_sql ;;
"3") update_sqlite ;;
"4") generate_salt ;;
"5") gen_htpasswd ;;
"6") replace_tags ;;
"7") sqlite_download;;
"8") wp_config;;
"X") exit ;;
"x") exit ;;
*) start
esac
finished
start
}

fix_perm() {
sudo chmod 777 -R ./
}

update_wp() {
echo -e "\e[92mUpdating to latest Wordpress version"
echo -e "\e[94m-------------------------------------------"
read -p "Download themes? [y/N]: " themes
echo 'Downloading latest Wordpress…'
wget -q --show-progress http://wordpress.org/latest.zip
echo 'Unpacking files…'
unzip -q ./latest.zip
if [ $themes != "y" ]; then
rm -R ./wordpress/wp-content/themes
fi
echo 'Updating files…'
cp -R ./wordpress/* ./
echo 'Cleaning up…'
rm -rf ./wordpress ./latest.zip
echo 'Done.'
}

update_sqlite() {

oldaddress=$(sqlite3 ./wp-content/database/.ht.sqlite "SELECT option_value FROM wp_options WHERE option_name='siteurl';")

echo -e "\e[92mUpdate Wordpress URL in SQLite"
echo -e "\e[94m-------------------------------------------"
read -p "Old website address: " -e -i $oldaddress oldaddress
read -p "New website address: " newaddress

sqlite3 wp-content/database/.ht.sqlite "UPDATE wp_options SET option_value = replace(option_value, '$oldaddress', '$newaddress') WHERE option_name = 'home' OR option_name = 'siteurl'; \
         UPDATE wp_posts SET guid = replace(guid, '$oldaddress','$newaddress'); \
         UPDATE wp_posts SET post_content = replace(post_content, '$oldaddress', '$newaddress'); \
         UPDATE wp_postmeta SET meta_value = replace(meta_value,'$oldaddress','$newaddress'); \
	 UPDATE wp_options SET option_value = replace(option_value,'$oldaddress','$newaddress');"

#newaddress=$(echo "$newaddress" | sed 's/\//\\\//g')
#sed -i "s/\('url'\s\+=>\s\+'\)[^']*'/\1\\$newaddress'/" ./wp-content/themes/ordipress/functions.php

}


update_sql() {
echo -e "\e[92mCreate SQL query to update Wordpress URL"
echo -e "\e[94m-------------------------------------------"
read -p "Old website address: " -e -i "localhost/" oldaddress
read -p "New website address: " newaddress

echo ""
echo -e "\e[92mSQL query:"
echo -e "\e[94m--------------------------------------"
echo -e "\e[37mUPDATE wp_options SET option_value = replace(option_value, '$oldaddress', '$newaddress') WHERE option_name = 'home' OR option_name = 'siteurl';"
echo "UPDATE wp_posts SET guid = replace(guid, '$oldaddress','$newaddress');"
echo "UPDATE wp_posts SET post_content = replace(post_content, '$oldaddress', '$newaddress');"
echo "UPDATE wp_postmeta SET meta_value = replace(meta_value,'$oldaddress','$newaddress');"
echo "UPDATE wp_options SET option_value = replace(option_value,'$oldaddress','$newaddress');"

}

generate_salt() {
echo -e "\e[92mCreate SQL query to update Wordpress URL"
echo -e "\e[94m-------------------------------------------"
salt="$(curl -s https://api.wordpress.org/secret-key/1.1/salt/)"
echo -e "\e[37m$salt"
read -p "Update wp-config.php? " updateconfig
if [ "$updateconfig" = "y" ]
then
    echo -e "<?php\n\
define('WP_DEBUG', false);\n\
define('DB_TYPE', 'sqlite');\n\
define('DB_COLLATE', '');\n\
$salt\n\
define('WP_DEFAULT_THEME','ordipress');\n\
\$table_prefix  = 'wp_';\n\
if (!defined('ABSPATH'))\n\
define('ABSPATH', dirname(__FILE__) . '/');\n\
require_once(ABSPATH . 'wp-settings.php');\n\
define('FS_METHOD','direct');\n" > ./wp-config.php
fi
}

gen_htpasswd() {
echo -e "\e[92mCreate .htpasswd for wp-admin"
echo -e "\e[94m-------------------------------------------"
read -p "User: " user
read -p "Password: " pass
read -p "Local path to Wordpress: " wpadmin
echo "$(htpasswd -nbB $user $pass)" > wp-admin/.htpasswd
echo "AuthType Basic
AuthName \"Login\"
AuthUserFile $wpadmin/wp-admin/.htpasswd
Require valid-user" > wp-admin/.htaccess
}

replace_tags() {
echo -e "\e[92mFix tags in files"
echo -e "\e[94m-------------------------------------------"
find ./ -type f -name "*.js" -exec sed -i -e 's/[a-z]\.type=["'\'']text\/javascript["'\''],//g' {} +
find ./ -type f \( -name "*.js" -o -name "*.php" \) -exec sed -i -e 's/type=["'\'']text\/javascript["'\'']//g' {} +
}

sqlite_download() {
echo -e "\e[92mDownloading SQLite plugin"
echo -e "\e[94m-------------------------------------------"
wget -P ./wp-content https://github.com/aaemnnosttv/wp-sqlite-db/raw/master/src/db.php
}

wp_config() {
echo -e "\e[92mSet wp-config.php to use SQLite"
echo -e "\e[94m-------------------------------------------"
mv ./wp-config.php ./wp-config.old.php
echo "
define('WP_DEBUG', true);
define('DB_TYPE', 'sqlite');
define('DB_COLLATE', '');
define('WP_DEFAULT_THEME','ordipress');
$table_prefix  = 'wp_';
if (!defined('ABSPATH'))
define('ABSPATH', dirname(__FILE__) . '/');
require_once(ABSPATH . 'wp-settings.php');
define('FS_METHOD','direct');" > ./wp-config.php
generate_salt
}

finished() {
echo ""
echo -e "\e[94mPress any key to quit."
read -n 1 -s -r
echo -e "\e[97m"
}

start
